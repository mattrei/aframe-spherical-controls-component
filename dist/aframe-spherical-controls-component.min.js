(function(global,factory){typeof exports==="object"&&typeof module!=="undefined"?factory():typeof define==="function"&&define.amd?define(factory):factory()})(this,function(){"use strict";if(typeof AFRAME==="undefined"){throw new Error("Component attempted to register before AFRAME was available.")}AFRAME.registerComponent("spherical-controls",{schema:{radius:{type:"number",default:1.1},inner:{type:"number",default:.1},outer:{type:"number",default:.1},speed:{type:"int",default:1},latLng:{type:"array",default:[0,0]},enabled:{type:"boolean",default:true}},init:function(){this.paused=false;this.camera=this.el.sceneEl.camera;this.origin=new THREE.Vector3;this.position=new THREE.Vector3(0,1,0);this.position.setLength(this.data.radius);this.forward=new THREE.Vector3(0,0,1);this.look=new THREE.Vector3(0,0,1)},update:function(oldData){const data=this.data;const pos=this.xyzFromLatLon(data.latLng[0],data.latLng[1]);pos.multiplyScalar(data.radius);this.position.copy(pos)},tick:function(time,delta){if(!this.data.enabled||this.paused)return;this.move(delta)},getForward:function(){const zaxis=new THREE.Vector3;return function(){this.camera.getWorldDirection(zaxis);return zaxis}}(),move:function(delta){const data=this.data;var distance=data.speed*(delta/1e3);var forward=this.getForward().setLength(distance);if(this.position.add(forward)){var length=this.position.length();if(length<data.radius-data.inner){this.position.setLength(data.radius-data.inner)}else if(length>data.radius+data.outer){this.position.setLength(data.radius+data.outer)}}var up=this.position.clone().sub(this.origin).normalize();var tangent=up.clone().cross(this.look).normalize();var look=tangent.clone().cross(up).normalize();this.look=look;var matrix=new THREE.Matrix4;const c=matrix.elements;c[0]=tangent.x,c[1]=tangent.y,c[2]=tangent.z,c[3]=0;c[4]=up.x,c[5]=up.y,c[6]=up.z,c[7]=0;c[8]=look.x,c[9]=look.y,c[10]=look.z,c[11]=0;c[12]=this.position.x,c[13]=this.position.y,c[14]=this.position.z,c[15]=1;const object=this.el.object3D;object.matrixAutoUpdate=false;object.matrix=matrix;object.updateMatrixWorld()},_calcPosFromLatLonRad:function(lat,lon,radius){var phi=(90-lat)*(Math.PI/180);var theta=(lon+180)*(Math.PI/180);x=-(radius*Math.sin(phi)*Math.cos(theta));z=radius*Math.sin(phi)*Math.sin(theta);y=radius*Math.cos(phi);return new THREE.Vector3(x,y,z)},getLatLonAzimuth:function(){const position=this.position.clone();const nextPosition=position.clone().add(this.getForward());const latLon=this.latLonFromXYZ(position.x,position.y,position.z);const nextLatLon=this.latLonFromXYZ(nextPosition.x,nextPosition.y,nextPosition.z);var azimuth=Math.atan2(-(nextLatLon.lon-latLon.lon),nextLatLon.lat-latLon.lat);return{lat:latLon.lat,lon:latLon.lon,azimuth:azimuth}},latLonFromXYZ:function(x,y,z){var radius=Math.sqrt(Math.pow(x,2)+Math.pow(y,2)+Math.pow(z,2)),lat=Math.asin(y/radius),lon=Math.atan2(x,z)-Math.PI/2;if(lon<-Math.PI){lon+=2*Math.PI}return{lat:lat,lon:lon}},xyzFromLatLon:function(lat,lon){var nlat=lat*Math.PI/180,nlon=(lon+180)*Math.PI/180;var x=-Math.cos(nlat)*Math.cos(nlon),y=Math.sin(nlat),z=Math.cos(nlat)*Math.sin(nlon);return new THREE.Vector3(x,y,z)},remove:function(){},pause:function(){this.paused=true},play:function(){this.paused=false}})});
